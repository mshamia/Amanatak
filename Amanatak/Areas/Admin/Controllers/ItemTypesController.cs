using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using PagedList.Mvc;
using PagedList;
using AmanatakBLL;
using AmanatakBLL.Models;

namespace Amanatak.Areas.Admin.Controllers
{
    //Generated by My Own Template
     public class ItemTypesController : Controller
    {
        private AmanatakContext db = new AmanatakContext();

        // GET: /Admin/ItemTypes/
        public ActionResult Index(string currentFilter, string searchString, int? page)
        {

        if (searchString != null)
            {
                page = 1;
            }
            else
            {
                searchString = currentFilter;
            }

            ViewBag.CurrentFilter = searchString;





var itemtype = db.ItemType.OrderBy(e=>e.Name).Select(e=>e);


            if (!String.IsNullOrEmpty(searchString))
            {
    
                itemtype = itemtype.Where(c => c.Name.Contains(searchString));
            }

            int pageSize = 10;
            int pageNumber = (page ?? 1);
            

            return View(itemtype.ToPagedList(pageNumber, pageSize));

        }

        // GET: /Admin/ItemTypes/Details/5
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            ItemType itemType = db.ItemType.Find(id);
            if (itemType == null)
            {
                return HttpNotFound();
            }
            return View(itemType);
        }

        // GET: /Admin/ItemTypes/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: /Admin/ItemTypes/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include="Id,Name,Status")] ItemType itemType)
        {
            if (ModelState.IsValid)
            {
                itemType.DateModified = null;
                itemType.UserModified = null;
                itemType.DateCreated = DateTime.UtcNow.AddHours(3);
                itemType.UserCreated = "Admin1";//For Prototype
                itemType.DateCreated = DateTime.UtcNow.AddHours(3);
                db.ItemType.Add(itemType);
                db.SaveChanges();
                return RedirectToAction("Index");
            }

            return View(itemType);
        }

        // GET: /Admin/ItemTypes/Edit/5
        public ActionResult Edit(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            ItemType itemType = db.ItemType.Find(id);
            if (itemType == null)
            {
                return HttpNotFound();
            }
            return View(itemType);
        }

        // POST: /Admin/ItemTypes/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include="Id,Name,Status")] ItemType itemType)
        {
            if (ModelState.IsValid)
            {
                        
                itemType.UserModified = "Admin1";//For Prototype
                itemType.DateModified = DateTime.UtcNow.AddHours(3);
                db.Entry(itemType).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(itemType);
        }

        // GET: /Admin/ItemTypes/Delete/5
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            ItemType itemType = db.ItemType.Find(id);
            if (itemType == null)
            {
                return HttpNotFound();
            }
            return View(itemType);
        }

        // POST: /Admin/ItemTypes/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            ItemType itemType = db.ItemType.Find(id);
            db.ItemType.Remove(itemType);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
