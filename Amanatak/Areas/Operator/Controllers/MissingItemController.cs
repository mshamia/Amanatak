using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using PagedList.Mvc;
using PagedList;
using AmanatakBLL;
using AmanatakBLL.Models;
using Amanatak.Models;

namespace Amanatak.Areas.Operator.Controllers
{
    //Generated by My Own Template
     public class MissingItemController : Controller
    {
        private AmanatakContext db = new AmanatakContext();

        // GET: /Operator/MissingItem/
        public ActionResult Index(string currentFilter, string searchString, int? page)
        {

 if (searchString != null)
            {
                page = 1;
            }
            else
            {
                searchString = currentFilter;
            }

            ViewBag.CurrentFilter = searchString;




            // var item = db.Item.Include(i => i.ItemType).OrderBy(e=>e.ItemType.Name).Select(e=>e);
            var OwnerItem = db.ItemOwner.Include(i => i.Item).OrderBy(e => e.FirstName).Select(e => e).Where(i => i.Item.Deliveried == false);

            if (!String.IsNullOrEmpty(searchString))
            {

                OwnerItem = OwnerItem.Where(c => c.FirstName.Contains(searchString)
                || c.IdentificationNo.Contains(searchString)
                ||c.LastName.Contains(searchString)
                ||c.Mobile.Contains(searchString)
                ||c.FullName.Contains(searchString));


            }

            int pageSize = 10;
            int pageNumber = (page ?? 1);
            

            return View(OwnerItem.ToPagedList(pageNumber, pageSize));

        }

        // GET: /Operator/MissingItem/Details/5
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Item item = db.Item.Find(id);
            if (item == null)
            {
                return HttpNotFound();
            }
            return View(item);
        }

        // GET: /Operator/MissingItem/Create
        public ActionResult Create()
        {
            ViewBag.ItemTypeId = new SelectList(db.ItemType, "Id", "Name");
            ViewBag.IdentificationID = new SelectList(db.IdentificationType, "Id", "Name");
            ViewBag.NationalityId = new SelectList(db.Countries, "Id", "Name");


 
            return View();
        }

        // POST: /Operator/MissingItem/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create( MissingItemViewModel input)
        {
            if (ModelState.IsValid)

                using (var context = new AmanatakContext())
                {
                    
                        using (DbContextTransaction dbTran = context.Database.BeginTransaction())
                        {
                            try
                            {
                            //Get Last Item Id

                            var LastId = 0;
                            if (LastId!=0)
                             LastId = db.Item.OrderByDescending(p => p.Id).FirstOrDefault().Id;

                    
                            input.Item.UserId = 1;//For Prototype
                            input.Item.UserType = UserType.Operator;

                            string number = String.Format("{0:d9}", (DateTime.Now.Ticks / 10) % 1000000000);
                            input.Item.SerialNumber = LastId.ToString() + number;
                            input.Item.Deliveried = false;
                            input.Item.ItemView = false;
                                db.Item.Add(input.Item);
                                db.SaveChanges();

                            input.ItemOwner.ItemId = input.Item.Id;
                            db.ItemOwner.Add(input.ItemOwner);
                            db.SaveChanges();
                            dbTran.Commit();
                                return RedirectToAction("Index");
                            }

                        catch
                        {
                            dbTran.Rollback();

                        }

                    }
                    }
            ViewBag.IdentificationID = new SelectList(db.IdentificationType, "Id", "Name", input.ItemOwner.IdentificationID);
            ViewBag.NationalityId = new SelectList(db.Countries, "Id", "Name", input.ItemOwner.Nationality);

            ViewBag.ItemTypeId = new SelectList(db.ItemType, "Id", "Name", input.Item.ItemTypeId);
            return View(input);
        }

        // GET: /Operator/MissingItem/Edit/5
        public ActionResult Edit(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Item item = db.Item.Find(id);
            if (item == null)
            {
                return HttpNotFound();
            }
            ViewBag.ItemTypeId = new SelectList(db.ItemType, "Id", "Name", item.ItemTypeId);
            return View(item);
        }

        // POST: /Operator/MissingItem/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include="Id,SerialNumber,ItemTypeId,ItemDetails,UserType,UserId")] Item item)
        {
            if (ModelState.IsValid)
            {
              
                item.UserModified = "Operatort1";//For Prototype
                item.DateModified = DateTime.UtcNow.AddHours(3);
                db.Entry(item).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            ViewBag.ItemTypeId = new SelectList(db.ItemType, "Id", "Name", item.ItemTypeId);
            return View(item);
        }

        // GET: /Operator/MissingItem/Delete/5
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Item item = db.Item.Find(id);
            if (item == null)
            {
                return HttpNotFound();
            }
            return View(item);
        }

        // POST: /Operator/MissingItem/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            Item item = db.Item.Find(id);
            db.Item.Remove(item);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
